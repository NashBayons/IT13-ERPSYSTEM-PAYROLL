<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAB//9k=
</value>
  </data>
</root>